"use strict";var _apiService=require("./apiService.js"),_DOMActions=require("./DOMActions.js");function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,_toPropertyKey(i.key),i)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperty(e,t,n){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0===n)return("string"===t?String:Number)(e);n=n.call(e,t||"default");if("object"!==_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}var WeatherApp=_createClass(function e(){var i=this;_classCallCheck(this,e),_defineProperty(this,"connectDOMElements",function(){var e=Array.from(document.querySelectorAll("[id]")).map(function(e){return e.id});i.viewElems=(0,_DOMActions.mapListToDOMElements)(e)}),_defineProperty(this,"setupListeners",function(){i.viewElems.searchInput.addEventListener("keydown",i.handleSubmit),i.viewElems.searchButton.addEventListener("click",i.handleSubmit),i.viewElems.returnToSearchBtn.addEventListener("click",i.returnToSearch)}),_defineProperty(this,"handleSubmit",function(){var e;"click"!==event.type&&"Enter"!==event.key||(i.fadeInOut(),e=i.viewElems.searchInput.value,""==i.viewElems.searchInput.value&&(e="New York"),(0,_apiService.getWeatherByCity)(e).then(function(e){i.displayWeatherData(e)}))}),_defineProperty(this,"fadeInOut",function(){"0.9"===i.viewElems.mainContainer.style.opacity||""===i.viewElems.mainContainer.style.opacity?i.viewElems.mainContainer.style.opacity="0":(i.viewElems.mainContainer.style.opacity="0",i.viewElems.mainContainer.style.opacity="0.9")}),_defineProperty(this,"switchView",function(){"none"!==i.viewElems.weatherSearchView.style.display?(i.viewElems.weatherSearchView.style.display="none",i.viewElems.weatherForecastView.style.display="block"):(i.viewElems.weatherForecastView.style.display="none",i.viewElems.weatherSearchView.style.display="flex")}),_defineProperty(this,"returnToSearch",function(){i.fadeInOut(),setTimeout(function(){i.switchView(),i.fadeInOut()},400),i.viewElems.searchInput.value=""}),_defineProperty(this,"displayWeatherData",function(e){setTimeout(function(){i.switchView(),i.fadeInOut()},400),i.viewElems.weatherCity.textContent=e.name,i.viewElems.weatherIcon.src="http://openweathermap.org/img/wn/".concat(e.weather[0].icon,"@2x.png"),i.viewElems.weatherIcon.alt=e.weather[0].description;var t=e.main.temp.toFixed(1),n=e.main.temp_max.toFixed(1),e=e.main.temp_min.toFixed(1);i.viewElems.weatherCurrentTemp.textContent="Current temp: ".concat(t,"°C"),i.viewElems.weatherMaxTemp.textContent="Max temp: ".concat(n,"°C"),i.viewElems.weatherMinTemp.textContent="Min temp: ".concat(e,"°C")}),this.viewElems={},this.connectDOMElements(),this.setupListeners()});document.addEventListener("DOMContentLoaded",new WeatherApp);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJfYXBpU2VydmljZSIsInJlcXVpcmUiLCJfRE9NQWN0aW9ucyIsIl90eXBlb2YiLCJvYmoiLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfdG9Qcm9wZXJ0eUtleSIsImtleSIsIl9jcmVhdGVDbGFzcyIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImFyZyIsIl90b1ByaW1pdGl2ZSIsIlN0cmluZyIsImlucHV0IiwiaGludCIsInByaW0iLCJ0b1ByaW1pdGl2ZSIsInVuZGVmaW5lZCIsIk51bWJlciIsInJlcyIsImNhbGwiLCJXZWF0aGVyQXBwIiwiX3RoaXMiLCJ0aGlzIiwiQXJyYXkiLCJmcm9tIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWFwIiwiZWxlbSIsImlkIiwidmlld0VsZW1zIiwibWFwTGlzdFRvRE9NRWxlbWVudHMiLCJsaXN0T2ZJZHMiLCJzZWFyY2hCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlU3VibWl0IiwicmV0dXJuVG9TZWFyY2hCdG4iLCJyZXR1cm5Ub1NlYXJjaCIsInR5cGUiLCJldmVudCIsImZhZGVJbk91dCIsInNlYXJjaElucHV0IiwiZ2V0V2VhdGhlckJ5Q2l0eSIsImRpc3BsYXlXZWF0aGVyRGF0YSIsImRhdGEiLCJtYWluQ29udGFpbmVyIiwic3R5bGUiLCJvcGFjaXR5Iiwid2VhdGhlclNlYXJjaFZpZXciLCJkaXNwbGF5Iiwid2VhdGhlckZvcmVjYXN0VmlldyIsInNldFRpbWVvdXQiLCJzd2l0Y2hWaWV3Iiwid2VhdGhlckljb24iLCJtYWluIiwidGVtcE1pbiIsIndlYXRoZXJDaXR5IiwidGV4dENvbnRlbnQiLCJuYW1lIiwiY29ubmVjdERPTUVsZW1lbnRzIiwic3JjIiwiY29uY2F0Iiwid2VhdGhlciIsImljb24iLCJzZXR1cExpc3RlbmVycyIsImFsdCIsImRlc2NyaXB0aW9uIiwidGVtcCIsInRvRml4ZWQiLCJ0ZW1wTWF4IiwidGVtcF9tYXgiLCJ0ZW1wX21pbiIsIndlYXRoZXJDdXJyZW50VGVtcCIsIndlYXRoZXJNYXhUZW1wIiwid2VhdGhlck1pblRlbXAiXSwibWFwcGluZ3MiOiJhQUFBLElBQUFBLFlBQUFDLFFBQUEsaUJBQUEsRUFDQUMsWUFBQUQsUUFBQSxpQkFBQSxFQUF1RCxTQUFBRSxRQUFBQyxHQUFBLE9BQUFELFFBQUEsWUFBQSxPQUFBRSxRQUFBLFVBQUEsT0FBQUEsT0FBQUMsU0FBQSxTQUFBRixHQUFBLE9BQUEsT0FBQUEsQ0FBQSxFQUFBLFNBQUFBLEdBQUEsT0FBQUEsR0FBQSxZQUFBLE9BQUFDLFFBQUFELEVBQUFHLGNBQUFGLFFBQUFELElBQUFDLE9BQUFHLFVBQUEsU0FBQSxPQUFBSixDQUFBLEdBQUFBLENBQUEsQ0FBQSxDQUFBLFNBQUFLLGtCQUFBQyxFQUFBQyxHQUFBLElBQUEsSUFBQUMsRUFBQSxFQUFBQSxFQUFBRCxFQUFBRSxPQUFBRCxDQUFBLEdBQUEsQ0FBQSxJQUFBRSxFQUFBSCxFQUFBQyxHQUFBRSxFQUFBQyxXQUFBRCxFQUFBQyxZQUFBLENBQUEsRUFBQUQsRUFBQUUsYUFBQSxDQUFBLEVBQUEsVUFBQUYsSUFBQUEsRUFBQUcsU0FBQSxDQUFBLEdBQUFDLE9BQUFDLGVBQUFULEVBQUFVLGVBQUFOLEVBQUFPLEdBQUEsRUFBQVAsQ0FBQSxDQUFBLENBQUEsQ0FBQSxTQUFBUSxhQUFBQyxFQUFBQyxFQUFBQyxHQUFBLE9BQUFELEdBQUFmLGtCQUFBYyxFQUFBZixVQUFBZ0IsQ0FB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QUFBLENBQUEsRUEyRnZEdkMsU0FBU1MsaUJBQWlCLG1CQUFvQixJQUFJZCxVQUFVIiwiZmlsZSI6InNjcmlwdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRXZWF0aGVyQnlDaXR5IH0gZnJvbSAnLi9hcGlTZXJ2aWNlLmpzJztcbmltcG9ydCB7IG1hcExpc3RUb0RPTUVsZW1lbnRzIH0gZnJvbSAnLi9ET01BY3Rpb25zLmpzJztcblxuY2xhc3MgV2VhdGhlckFwcCB7XG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHRoaXMudmlld0VsZW1zID0ge307XG5cdFx0dGhpcy5jb25uZWN0RE9NRWxlbWVudHMoKTtcblx0XHR0aGlzLnNldHVwTGlzdGVuZXJzKCk7XG5cdH1cblxuXHRjb25uZWN0RE9NRWxlbWVudHMgPSAoKSA9PiB7XG5cdFx0Y29uc3QgbGlzdE9mSWRzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbaWRdJykpLm1hcChcblx0XHRcdChlbGVtKSA9PiBlbGVtLmlkXG5cdFx0KTtcblx0XHR0aGlzLnZpZXdFbGVtcyA9IG1hcExpc3RUb0RPTUVsZW1lbnRzKGxpc3RPZklkcyk7XG5cdH07XG5cblx0c2V0dXBMaXN0ZW5lcnMgPSAoKSA9PiB7XG5cdFx0dGhpcy52aWV3RWxlbXMuc2VhcmNoSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlU3VibWl0KTtcblx0XHR0aGlzLnZpZXdFbGVtcy5zZWFyY2hCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZVN1Ym1pdCk7XG5cdFx0dGhpcy52aWV3RWxlbXMucmV0dXJuVG9TZWFyY2hCdG4uYWRkRXZlbnRMaXN0ZW5lcihcblx0XHRcdCdjbGljaycsXG5cdFx0XHR0aGlzLnJldHVyblRvU2VhcmNoXG5cdFx0KTtcblx0fTtcblxuXHRoYW5kbGVTdWJtaXQgPSAoKSA9PiB7XG5cdFx0aWYgKGV2ZW50LnR5cGUgPT09ICdjbGljaycgfHwgZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XG5cdFx0XHR0aGlzLmZhZGVJbk91dCgpO1xuXHRcdFx0bGV0IGlucHV0ID0gdGhpcy52aWV3RWxlbXMuc2VhcmNoSW5wdXQudmFsdWU7XG5cdFx0XHRpZih0aGlzLnZpZXdFbGVtcy5zZWFyY2hJbnB1dC52YWx1ZSA9PSAnJykge1xuXHRcdFx0XHRpbnB1dCA9ICdOZXcgWW9yaydcblx0XHRcdH1cblx0XHRcdGdldFdlYXRoZXJCeUNpdHkoaW5wdXQpLnRoZW4oKGRhdGEpID0+IHtcblx0XHRcdFx0dGhpcy5kaXNwbGF5V2VhdGhlckRhdGEoZGF0YSk7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH07XG5cblx0ZmFkZUluT3V0ID0gKCkgPT4ge1xuXHRcdGlmIChcblx0XHRcdHRoaXMudmlld0VsZW1zLm1haW5Db250YWluZXIuc3R5bGUub3BhY2l0eSA9PT0gJzAuOScgfHxcblx0XHRcdHRoaXMudmlld0VsZW1zLm1haW5Db250YWluZXIuc3R5bGUub3BhY2l0eSA9PT0gJydcblx0XHQpIHtcblx0XHRcdHRoaXMudmlld0VsZW1zLm1haW5Db250YWluZXIuc3R5bGUub3BhY2l0eSA9ICcwJztcblx0XHR9IGVsc2UgaWYgKCh0aGlzLnZpZXdFbGVtcy5tYWluQ29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAnMCcpKSB7XG5cdFx0XHR0aGlzLnZpZXdFbGVtcy5tYWluQ29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAnMC45Jztcblx0XHR9XG5cdH07XG5cblx0c3dpdGNoVmlldyA9ICgpID0+IHtcblx0XHRpZiAodGhpcy52aWV3RWxlbXMud2VhdGhlclNlYXJjaFZpZXcuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnKSB7XG5cdFx0XHR0aGlzLnZpZXdFbGVtcy53ZWF0aGVyU2VhcmNoVmlldy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHRcdFx0dGhpcy52aWV3RWxlbXMud2VhdGhlckZvcmVjYXN0Vmlldy5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy52aWV3RWxlbXMud2VhdGhlckZvcmVjYXN0Vmlldy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHRcdFx0dGhpcy52aWV3RWxlbXMud2VhdGhlclNlYXJjaFZpZXcuc3R5bGUuZGlzcGxheSA9ICdmbGV4Jztcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuVG9TZWFyY2ggPSAoKSA9PiB7XG5cdFx0dGhpcy5mYWRlSW5PdXQoKTtcblxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0dGhpcy5zd2l0Y2hWaWV3KCk7XG5cdFx0XHR0aGlzLmZhZGVJbk91dCgpO1xuXHRcdH0sIDQwMCk7XG5cdFx0dGhpcy52aWV3RWxlbXMuc2VhcmNoSW5wdXQudmFsdWUgPSAnJztcblx0fTtcblxuXHRkaXNwbGF5V2VhdGhlckRhdGEgPSAoZGF0YSkgPT4ge1xuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0dGhpcy5zd2l0Y2hWaWV3KCk7XG5cdFx0XHR0aGlzLmZhZGVJbk91dCgpO1xuXHRcdH0sIDQwMCk7XG5cblx0XHR0aGlzLnZpZXdFbGVtcy53ZWF0aGVyQ2l0eS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcblx0XHR0aGlzLnZpZXdFbGVtcy53ZWF0aGVySWNvbi5zcmMgPSBgaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvd24vJHtkYXRhLndlYXRoZXJbMF0uaWNvbn1AMngucG5nYDtcblx0XHR0aGlzLnZpZXdFbGVtcy53ZWF0aGVySWNvbi5hbHQgPSBkYXRhLndlYXRoZXJbMF0uZGVzY3JpcHRpb247XG5cblx0XHRjb25zdCB0ZW1wID0gZGF0YS5tYWluLnRlbXAudG9GaXhlZCgxKVxuXHRcdGNvbnN0IHRlbXBNYXggPSBkYXRhLm1haW4udGVtcF9tYXgudG9GaXhlZCgxKVxuXHRcdGNvbnN0IHRlbXBNaW4gPSBkYXRhLm1haW4udGVtcF9taW4udG9GaXhlZCgxKVxuXG5cdFx0dGhpcy52aWV3RWxlbXMud2VhdGhlckN1cnJlbnRUZW1wLnRleHRDb250ZW50ID0gYEN1cnJlbnQgdGVtcDogJHt0ZW1wfcKwQ2A7XG5cdFx0dGhpcy52aWV3RWxlbXMud2VhdGhlck1heFRlbXAudGV4dENvbnRlbnQgPSBgTWF4IHRlbXA6ICR7dGVtcE1heH3CsENgO1xuXHRcdHRoaXMudmlld0VsZW1zLndlYXRoZXJNaW5UZW1wLnRleHRDb250ZW50ID0gYE1pbiB0ZW1wOiAke3RlbXBNaW59wrBDYDtcblx0fTtcbn1cblxuXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBuZXcgV2VhdGhlckFwcCk7XG4iXX0=
